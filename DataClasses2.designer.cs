#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountantManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Login")]
	public partial class DataClasses2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertOperaciones(Operaciones instance);
    partial void UpdateOperaciones(Operaciones instance);
    partial void DeleteOperaciones(Operaciones instance);
    partial void InsertTrabajos(Trabajos instance);
    partial void UpdateTrabajos(Trabajos instance);
    partial void DeleteTrabajos(Trabajos instance);
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    #endregion
		
		public DataClasses2DataContext() : 
				base(global::AccountantManager.Properties.Settings.Default.LoginConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Operaciones> Operaciones
		{
			get
			{
				return this.GetTable<Operaciones>();
			}
		}
		
		public System.Data.Linq.Table<Trabajos> Trabajos
		{
			get
			{
				return this.GetTable<Trabajos>();
			}
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operaciones")]
	public partial class Operaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Trabajo;
		
		private int _ID_Cliente;
		
		private double _Costo_Total;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private EntityRef<Trabajos> _Trabajos;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_TrabajoChanging(int value);
    partial void OnID_TrabajoChanged();
    partial void OnID_ClienteChanging(int value);
    partial void OnID_ClienteChanged();
    partial void OnCosto_TotalChanging(double value);
    partial void OnCosto_TotalChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    #endregion
		
		public Operaciones()
		{
			this._Trabajos = default(EntityRef<Trabajos>);
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Trabajo", DbType="Int NOT NULL")]
		public int ID_Trabajo
		{
			get
			{
				return this._ID_Trabajo;
			}
			set
			{
				if ((this._ID_Trabajo != value))
				{
					if (this._Trabajos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TrabajoChanging(value);
					this.SendPropertyChanging();
					this._ID_Trabajo = value;
					this.SendPropertyChanged("ID_Trabajo");
					this.OnID_TrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Cliente", DbType="Int NOT NULL")]
		public int ID_Cliente
		{
			get
			{
				return this._ID_Cliente;
			}
			set
			{
				if ((this._ID_Cliente != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClienteChanging(value);
					this.SendPropertyChanging();
					this._ID_Cliente = value;
					this.SendPropertyChanged("ID_Cliente");
					this.OnID_ClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo_Total", DbType="Float NOT NULL")]
		public double Costo_Total
		{
			get
			{
				return this._Costo_Total;
			}
			set
			{
				if ((this._Costo_Total != value))
				{
					this.OnCosto_TotalChanging(value);
					this.SendPropertyChanging();
					this._Costo_Total = value;
					this.SendPropertyChanged("Costo_Total");
					this.OnCosto_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajos_Operaciones", Storage="_Trabajos", ThisKey="ID_Trabajo", OtherKey="ID", IsForeignKey=true)]
		public Trabajos Trabajos
		{
			get
			{
				return this._Trabajos.Entity;
			}
			set
			{
				Trabajos previousValue = this._Trabajos.Entity;
				if (((previousValue != value) 
							|| (this._Trabajos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajos.Entity = null;
						previousValue.Operaciones.Remove(this);
					}
					this._Trabajos.Entity = value;
					if ((value != null))
					{
						value.Operaciones.Add(this);
						this._ID_Trabajo = value.ID;
					}
					else
					{
						this._ID_Trabajo = default(int);
					}
					this.SendPropertyChanged("Trabajos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Operaciones", Storage="_Clientes", ThisKey="ID_Cliente", OtherKey="IDCliente", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Operaciones.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Operaciones.Add(this);
						this._ID_Cliente = value.IDCliente;
					}
					else
					{
						this._ID_Cliente = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trabajos")]
	public partial class Trabajos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private System.Nullable<double> _Costo;
		
		private EntitySet<Operaciones> _Operaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCostoChanging(System.Nullable<double> value);
    partial void OnCostoChanged();
    #endregion
		
		public Trabajos()
		{
			this._Operaciones = new EntitySet<Operaciones>(new Action<Operaciones>(this.attach_Operaciones), new Action<Operaciones>(this.detach_Operaciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Float")]
		public System.Nullable<double> Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajos_Operaciones", Storage="_Operaciones", ThisKey="ID", OtherKey="ID_Trabajo")]
		public EntitySet<Operaciones> Operaciones
		{
			get
			{
				return this._Operaciones;
			}
			set
			{
				this._Operaciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Operaciones(Operaciones entity)
		{
			this.SendPropertyChanging();
			entity.Trabajos = this;
		}
		
		private void detach_Operaciones(Operaciones entity)
		{
			this.SendPropertyChanging();
			entity.Trabajos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCliente;
		
		private string _Nombre_RazonSocial;
		
		private string _Email;
		
		private string _Categoria;
		
		private System.Nullable<int> _CUIL_CUIT;
		
		private EntitySet<Operaciones> _Operaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClienteChanging(int value);
    partial void OnIDClienteChanged();
    partial void OnNombre_RazonSocialChanging(string value);
    partial void OnNombre_RazonSocialChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnCUIL_CUITChanging(System.Nullable<int> value);
    partial void OnCUIL_CUITChanged();
    #endregion
		
		public Clientes()
		{
			this._Operaciones = new EntitySet<Operaciones>(new Action<Operaciones>(this.attach_Operaciones), new Action<Operaciones>(this.detach_Operaciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_RazonSocial", DbType="VarChar(50)")]
		public string Nombre_RazonSocial
		{
			get
			{
				return this._Nombre_RazonSocial;
			}
			set
			{
				if ((this._Nombre_RazonSocial != value))
				{
					this.OnNombre_RazonSocialChanging(value);
					this.SendPropertyChanging();
					this._Nombre_RazonSocial = value;
					this.SendPropertyChanged("Nombre_RazonSocial");
					this.OnNombre_RazonSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="Char(10)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUIL_CUIT", DbType="Int")]
		public System.Nullable<int> CUIL_CUIT
		{
			get
			{
				return this._CUIL_CUIT;
			}
			set
			{
				if ((this._CUIL_CUIT != value))
				{
					this.OnCUIL_CUITChanging(value);
					this.SendPropertyChanging();
					this._CUIL_CUIT = value;
					this.SendPropertyChanged("CUIL_CUIT");
					this.OnCUIL_CUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Operaciones", Storage="_Operaciones", ThisKey="IDCliente", OtherKey="ID_Cliente")]
		public EntitySet<Operaciones> Operaciones
		{
			get
			{
				return this._Operaciones;
			}
			set
			{
				this._Operaciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Operaciones(Operaciones entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Operaciones(Operaciones entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
}
#pragma warning restore 1591
